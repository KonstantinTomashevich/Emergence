name: Check code style

on:
  pull_request:
    branches:
      - master

jobs:
  check_code_style:
    defaults:
      run:
        shell: pwsh

    env:
      BUILD_DIRECTORY: ${{github.workspace}}\Build

    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      # Note: On windows-latest image there is the second LLVM installation that is already in Env:Path.
      #       If we want to use CLangCL, we must delete other installation from path to avoid mismatches.
      - name: Remove LLVM from path
        run: |
          $PathWithoutLLVM13 = $Env:Path.Replace("C:\Program Files\LLVM\bin", "")
          echo "PATH=$PathWithoutLLVM13" >> $Env:GITHUB_ENV

      - name: Setup Dependencies
        uses: ./.github/actions/SetupDependencies
        with:
          platform: ${{runner.os}}
          build_type: Debug

      - name: Create build directory
        run: cmake -E make_directory ${{env.BUILD_DIRECTORY}}

      - name: Configure
        working-directory: ${{env.BUILD_DIRECTORY}}
        run: >
          cmake -G "Visual Studio 16 2019" -A x64 -T clangcl ${{github.workspace}} 
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug

      - name: Check C++ code style using CLang Tools
        working-directory: ${{github.workspace}}
        # We need to import Visual Studio environment to find LLVM tools, which is not possible through powershell.
        shell: cmd
        run: >
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsx86_amd64.bat" &&
          powershell .\Script\CodeStyle\CheckCLangFormat.ps1 &&
          powershell .\Script\CodeStyle\CheckCLangTidy.ps1 ${{env.BUILD_DIRECTORY}}

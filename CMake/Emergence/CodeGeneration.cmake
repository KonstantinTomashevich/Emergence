# File-private function that is not intended to be used outside of code generation.
# Writes given content to given file unless it already contains the same content.
function (private_write_if_not_equal TARGET_FILE CONTENT)
    set (CURRENT_CONTENT)

    if (EXISTS "${TARGET_FILE}")
        file (READ "${TARGET_FILE}" CURRENT_CONTENT)
    endif ()

    if (NOT CONTENT STREQUAL CURRENT_CONTENT)
        file (WRITE "${TARGET_FILE}" "${CONTENT}")
    endif ()
endfunction ()

# Executes CMake-driven code generation by including all "*.generated.*.cmake" files.
function (call_code_generation ROOT_DIRECTORY)
    file (GLOB_RECURSE GENERATORS "${ROOT_DIRECTORY}/*.generated.*.cmake")
    foreach (GENERATOR IN LISTS GENERATORS)
        set (TARGET_FILE "${GENERATOR}")
        cmake_path (REMOVE_EXTENSION TARGET_FILE LAST_ONLY)
        message (STATUS "Generating ${TARGET_FILE}...")

        set (CONTENT "")
        include (${GENERATOR})
        private_write_if_not_equal ("${TARGET_FILE}" "${CONTENT}")
    endforeach ()
endfunction ()

# Generic utility function for generating API headers for Windows dllexport/dllimport support.
# Arguments:
# - API_MACRO: name of the macro that will be used as API declaration macro.
# - EXPORT_MACRO: name of the macro that is only added to targets that export definitions of declared API.
# - OUTPUT_FILE: path to the output file.
function (generate_api_header)
    cmake_parse_arguments (GENERATE "" "API_MACRO;EXPORT_MACRO;OUTPUT_FILE" "" ${ARGV})
    if (DEFINED GENERATE_UNPARSED_ARGUMENTS OR
            NOT DEFINED GENERATE_API_MACRO OR
            NOT DEFINED GENERATE_EXPORT_MACRO OR
            NOT DEFINED GENERATE_OUTPUT_FILE)
        message (FATAL_ERROR "Incorrect function arguments!")
    endif ()

    set (CONTENT)
    string (APPEND CONTENT "// AUTOGENERATED BY BUILD SYSTEM, DO NOT MODIFY.\n\n")
    string (APPEND CONTENT "#pragma once\n\n")
    string (APPEND CONTENT "#if defined(_WIN32)\n")
    string (APPEND CONTENT "#    if defined(${GENERATE_EXPORT_MACRO})\n")
    string (APPEND CONTENT "#        define ${GENERATE_API_MACRO} __declspec(dllexport)\n")
    string (APPEND CONTENT "#    else\n")
    string (APPEND CONTENT "#        define ${GENERATE_API_MACRO} __declspec(dllimport)\n")
    string (APPEND CONTENT "#    endif\n")
    string (APPEND CONTENT "#else\n")
    string (APPEND CONTENT "#    define ${GENERATE_API_MACRO}\n")
    string (APPEND CONTENT "#endif\n")

    private_write_if_not_equal ("${GENERATE_OUTPUT_FILE}" "${CONTENT}")
endfunction ()
